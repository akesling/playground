---
name: CI
"on":
  push:
    branches:
      - trunk
  pull_request:
    branches:
      - trunk
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal

      - name: Compile
        run: cargo build --workspace --verbose

      - name: Compile tests
        run: cargo test --workspace --no-run

      - name: Test
        run: cargo test --workspace

  rust:
    name: Lint and format Rust
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: rustfmt, clippy

      - name: Install Ruby toolchain
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ".ruby-version"

      - uses: Swatinem/rust-cache@v1

      - name: Check formatting
        run: cargo fmt -- --check --color=auto

      - name: Lint with Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace --all-features

  ruby:
    name: Lint and format Ruby
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Ruby toolchain
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ".ruby-version"
          bundler-cache: true

      - name: Lint and check formatting with Rubocop
        run: bundle exec rubocop --format github

  js-ts:
    name: Lint and format JavaScript and TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nodejs toolchain
        run: npm ci

      - name: Create stubs for Wasm Sources
        run: |
          touch src/wasm/playground.js
          touch src/wasm/playground.wasm

      - name: Compile with TypeScript
        run: npx tsc --extendedDiagnostics --listFiles --listEmittedFiles

      - name: Lint and check formatting with eslint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx

  text:
    name: Lint and format text
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Lint and check formatting with prettier
        run: npx prettier --check '**/*'

      - name: Lint YAML sources with yamllint
        run: |
          sudo -H python3 -m pip install --upgrade pip setuptools wheel
          sudo -H python3 -m pip install --upgrade yamllint
          yamllint --version
          echo "Linting YAML sources with yamllint ..."
          yamllint --strict .
          echo "OK"
