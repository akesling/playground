---
name: Playground
"on":
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * TUE"
jobs:
  build:
    name: Build Playground
    runs-on: ubuntu-latest
    env:
      RUSTFLAGS: -D warnings
      RUST_BACKTRACE: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set toolchain versions
        run: |
          echo "::set-output name=rust::$(cat rust-toolchain)"
          echo "::set-output name=emscripten::$(cat emscripten-toolchain)"
        id: toolchain_versions

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: wasm32-unknown-emscripten
          profile: minimal
          override: true

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-registry-${{ runner.os }}-rust-${{ steps.toolchain_versions.outputs.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: cargo-index-${{ runner.os }}-rust-${{ steps.toolchain_versions.outputs.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: cargo-build-target-${{ runner.os }}-rust-${{ steps.toolchain_versions.outputs.rust }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Ruby toolchain
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ".ruby-version"

      - name: Cache emsdk
        uses: actions/cache@v2
        id: cache
        with:
          path: "emsdk-cache"
          key: emscripten-emsdk-${{ runner.os }}-emsdk-${{ steps.toolchain_versions.outputs.emscripten }}

      - name: Install Emscripten toolchain
        uses: mymindstorm/setup-emsdk@v7
        with:
          version: ${{ steps.toolchain_versions.outputs.emscripten }}
          actions-cache-folder: "emsdk-cache"

      - name: Verify emcc version
        run: emcc -v

      - name: Install Nodejs toolchain
        run: npm ci

      - name: Compile
        run: cargo build --target wasm32-unknown-emscripten --release --verbose
        env:
          RUSTFLAGS: "-D warnings -C link-arg=-s -C link-arg=MODULARIZE=1"

      - name: Webpack build
        run: npx webpack --mode production

      - name: Deploy Playground
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/dist
          publish_branch: gh-pages
          user_name: artichoke-ci
          user_email: ci@artichokeruby.org
